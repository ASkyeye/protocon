#!/usr/bin/env python3
# -*- coding: utf-8 -*-
#
#  protocon
#
#  Copyright 2017 Spencer McIntyre <zeroSteiner@gmail.com>
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
#  MA 02110-1301, USA.
#
#

import argparse
import functools
import os
import sys

import boltons.iterutils
import boltons.urlutils

get_path = functools.partial(os.path.join, os.path.abspath(os.path.dirname(__file__)))
sys.path.append(get_path('lib'))

import protocon

_net_attributes = ('host', 'port',)
SCHEMES = {
	'pipe': ('path',),
	'tcp': _net_attributes,
	'tcp4': _net_attributes,
	'tcp6': _net_attributes,
	'udp': _net_attributes,
	'udp4': _net_attributes,
	'udp6': _net_attributes,
}
del _net_attributes

def main():
	parser = argparse.ArgumentParser(description='ProtoCon', conflict_handler='resolve')
	parser.add_argument('-v', '--version', action='version', version='%(prog)s Version: ' + protocon.__version__)
	parser.add_argument('target_url', help='the connection URL')
	parser.add_argument('script', type=argparse.FileType('r'), help='the script to execute')
	arguments = parser.parse_args()

	url = boltons.urlutils.URL(arguments.target_url)
	scheme_attributes = SCHEMES.get(url.scheme)
	if not scheme_attributes:
		protocon.engine.print_error('unsupported URL scheme: ' + url.scheme)
		return os.EX_USAGE
	for attribute in scheme_attributes:
		if not getattr(url, attribute):
			protocon.engine.print_error('missing URL attribute: ' + attribute)
			return os.EX_USAGE

	engine = protocon.Engine.from_url(url)

	engine.connection.close()
	return 0

if __name__ == '__main__':
	sys.exit(main())
